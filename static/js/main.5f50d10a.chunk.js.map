{"version":3,"sources":["app/flightsSlice.js","app/store.js","utils.js","components/Leg/Leg.js","components/Flight/Flight.js","components/FilterPanel/FilterPanel.js","App.js","index.js"],"names":["flights","result","flightsSlice","createSlice","name","initialState","flightsData","airlines","reducers","setFlights","state","carriers","forEach","item","duration","flight","legs","reduce","acc","leg","numOfChanges","segments","length","newAirline","carrier","findIndex","uid","push","actions","selectFlights","selectAirlines","setAutoFreeze","configureStore","reducer","flightsReducer","matchNumInNominativeCase","inputNumber","resultingString","caseForms","numberArg","number","string","toString","Number","lastDigitStr","charAt","lastDigitNum","lastTwoDigitsStr","slice","lastTwoDigitsNum","lastButOneDigitStr","lastButOneDigitNum","getAsNumberAndLastDigit","getDateAndTime","timestamp","Date","time","toLocaleTimeString","hour","minute","date","toLocaleDateString","day","month","weekday","getCityString","city","airport","caption","match","Leg","data","segment1","segment2","lastSegment","departureCity","departureAirport","arrivalCity","arrivalAirport","departureDT","departureDate","arrivalDT","durationString","blankDate","setMinutes","getUTCHours","getUTCMinutes","getDurationString","airlineString","map","segment","airline","every","airlineCode","className","currencySymbolMap","RUB","USD","Flight","price","adultPrice","passengerPrices","find","passengerType","singlePassengerTotal","adultPriceFigure","parseInt","amount","adultPriceCurrency","currencyCode","alt","index","FilterPanel","filterAndSort","useSelector","handleChange","consolidatedValue","currentTarget","target","dataAttr","dataset","value","fieldSetName","fieldSetId","id","fieldId","fieldType","type","fieldChecked","checked","fieldValue","onChange","htmlFor","App","dispatch","useDispatch","useState","sortedIndices","setSortedIndices","numOfRendered","setNumOfRendered","renderedIndices","setRenderedIndices","sortCriterion","setSortCriterion","changes","filterCriteria","setFilterCriteria","useEffect","_","i","newSortedIndices","sortedIndicesInput","sort","a","b","total","newFilterCriteria","itemPrice","Object","keys","values","includes","minimum","maximum","onClick","newNumOfRendered","Math","min","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.5f50d10a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n/* Вместо подключения API */\nimport { result } from '../data/flights.json';\n\nconst { flights } = result;\n\nexport const flightsSlice = createSlice({\n  name: 'flights',\n  initialState: {\n    flightsData: [],\n    airlines: [],\n  },\n  reducers: {\n    setFlights: (state) => { // (state, action)\n      let carriers = [];\n      flights.forEach((item) => {\n        item.duration = item.flight.legs.reduce((acc, leg) => acc + leg.duration, 0)\n        item.numOfChanges = item.flight.legs.reduce((acc, leg) => acc + leg.segments.length - 1, 0)\n\n        const newAirline = item.flight.carrier;\n        if (carriers.findIndex((carrier) => carrier.uid === newAirline.uid) === -1) {\n          carriers.push(newAirline);\n        }\n      });\n\n      state.flightsData = flights;\n      state.airlines = carriers;\n    },\n  },\n});\n\nexport const { setFlights } = flightsSlice.actions;\nexport const selectFlights = state => state.flights.flightsData;\nexport const selectAirlines = state => state.flights.airlines;\n\nexport default flightsSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit'\nimport flightsReducer from './flightsSlice'\nimport { setAutoFreeze } from 'immer';\n\n// Fixes \"Cannot assign to read only property\" error message\n// when modifying objects from Redux state directly.\n// https://github.com/reduxjs/redux-toolkit/issues/424\nsetAutoFreeze(false);\n/* Ошибка возникала в src\\app\\flightsSlice.js из-за записи item.duration = ... Это не мутация стейта, а изменение\nобъекта входных данных ПЕРЕД его записью в стейт. Почему срабатывала ошибка, вроде как связанная с мутацией стейта, непонятно. */\n\nexport default configureStore({\n  reducer: {\n    flights: flightsReducer\n  }\n})\n","function getAsNumberAndLastDigit(numberArg) {\n  let number;\n  let string;\n  if (typeof numberArg === 'number') {\n    number = numberArg;\n    string = numberArg.toString();\n  } else {\n    number = Number(numberArg);\n    string = numberArg;\n  }\n  const { length } = string;\n  const lastDigitStr = string.charAt(length - 1);\n  const lastDigitNum = Number(lastDigitStr);\n  const lastTwoDigitsStr = string.slice(length - 2);\n  const lastTwoDigitsNum = Number(lastTwoDigitsStr);\n  const lastButOneDigitStr = string.slice(length - 2, length - 1);\n  const lastButOneDigitNum = Number(lastButOneDigitStr);\n  const result = {\n    number,\n    string,\n    lastDigitNum,\n    lastTwoDigitsNum,\n    lastButOneDigitNum,\n  };\n  return result;\n}\n\nexport function matchNumInNominativeCase(inputNumber) {\n  let resultingString;\n  const caseForms = {\n    singular: 'пересадка', // …1, кроме …11\n    plural: 'пересадки', // …2–4, кроме …12–…14\n    genitivePlural: 'пересадок', // 0, …5–9, 10–20, …11\n  };\n  const {\n    number,\n    string,\n    lastDigitNum,\n    lastButOneDigitNum,\n  } = getAsNumberAndLastDigit(inputNumber);\n  if (number === 0) {\n    return resultingString = null;\n  }\n  if (\n    (lastDigitNum >= 5 && lastDigitNum <= 9)\n    || lastDigitNum === 0\n    || lastButOneDigitNum === 1\n  ) {\n    resultingString = `${string} ${caseForms.genitivePlural}`;\n    return resultingString;\n  }\n  if (lastDigitNum >= 2 && lastDigitNum <= 4) {\n    resultingString = `${string} ${caseForms.plural}`;\n    return resultingString;\n  }\n  if (lastDigitNum === 1) {\n    resultingString = `${string} ${caseForms.singular}`;\n    return resultingString;\n  }\n  return resultingString;\n}\n\nexport function getDateAndTime(timestamp) {\n  const string = new Date(timestamp);\n  return {\n    time: string.toLocaleTimeString('ru', { hour: '2-digit', minute: '2-digit' }),\n    date: string.toLocaleDateString('ru', { day: 'numeric', month: 'short' }),\n    weekday: string.toLocaleDateString('ru', { weekday: 'short' }),\n  }\n}\n\nexport function getDurationString(duration) {\n  const blankDate = new Date(0);\n  blankDate.setMinutes(duration);\n  return `${blankDate.getUTCHours()} ч ${blankDate.getUTCMinutes()} мин`;\n}\n\nexport function getAirlineString(airlines) {\n  if (airlines.length === 1 || airlines.every((item) => item.uid === airlines[0].uid)) {\n    return `Рейс выполняет: ${airlines[0].airlineCode} ${airlines[0].caption}`;\n  } else {\n    return 'Рейс выполняют:' + airlines.map((item) => ` ${item.airlineCode} ${item.caption}`);\n  }\n}\n\nexport function getCityString(city, airport) {\n  return typeof city !== 'undefined' ? city.caption : airport.caption.match(/(\\W+),/)[1];\n}\n","import React from 'react';\nimport './Leg.scss';\nimport { matchNumInNominativeCase, getDateAndTime, getDurationString, getCityString, getAirlineString } from '../../utils.js';\n\nfunction Leg({ data }) { // leg.segments\n  const segment1 = data.segments[0];\n  const segment2 = data.segments[1];\n  /* здесь можно было бы сделать сравнение дат или проверку показателя starting, но в предоставленном наборе данных всегда\n  не более двух сегментов и они в хронологическом порядке (см. data_analysis.js) */\n  const lastSegment = segment2 ? segment2 : segment1;\n\n  const { departureCity, departureAirport } = segment1;\n  const { arrivalCity, arrivalAirport } = lastSegment;\n\n  const departureDT = getDateAndTime(segment1.departureDate);\n  const arrivalDT = getDateAndTime(lastSegment.departureDate);\n\n  const durationString = getDurationString(data.duration);\n\n  const airlineString = getAirlineString(data.segments.map((segment) => segment.airline))\n\n  return (\n    <li className=\"leg\" >\n      <h3 className=\"leg__header\" >\n        <span className=\"leg__city\" >\n          {getCityString(departureCity, departureAirport)}, {departureAirport.caption} <span className=\"leg__airport-code\" >({departureAirport.uid}) </span>\n        </span>\n\n        <span className=\"leg__city\" >\n          {getCityString(arrivalCity, arrivalAirport)}, {arrivalAirport.caption} <span className=\"leg__airport-code\" >({arrivalAirport.uid}) </span>\n        </span>\n      </h3>\n\n      <div className=\"leg__date-time\" >\n        <span className=\"leg__time\" >{departureDT.time} <span className=\"leg__date\" >{departureDT.date} {departureDT.weekday}</span></span>\n        <span className=\"leg__duration\" >{durationString}</span>\n        <span className=\"leg__time\" ><span className=\"leg__date\" >{arrivalDT.date} {arrivalDT.weekday}</span> {arrivalDT.time}</span>\n      </div>\n\n      <span className=\"leg__change-number\" ><span className=\"leg__change-number-text\" >{matchNumInNominativeCase(data.segments.length - 1)}</span></span>\n\n      <span className=\"leg__airline\" >{airlineString}</span>\n    </li>\n  )\n}\n\nexport default Leg;\n","import React from 'react';\nimport './Flight.scss';\nimport Leg from '../Leg/Leg';\n\nconst currencySymbolMap = {\n  RUB: \"\\u20bd\",\n  USD: \"$\",\n}\n\nfunction Flight({ data }) {\n  const { flight: { carrier, price, legs } } = data;\n\n  const adultPrice = price.passengerPrices.find((item) => item.passengerType.uid === \"ADULT\").singlePassengerTotal;\n  const adultPriceFigure = parseInt(adultPrice.amount, 10);\n  const adultPriceCurrency = currencySymbolMap[adultPrice.currencyCode];\n\n  return (\n    <article className=\"flight\" >\n      <div className=\"flight__header\" >\n        <img className=\"flight__airline-logo\" alt={carrier.caption} />\n\n        <div className=\"flight__price\" >\n          <span className=\"flight__price-tag\" >{adultPriceFigure} {adultPriceCurrency}</span>\n          <span className=\"flight__price-caption\" >Стоимость для одного взрослого пассажира</span>\n        </div>\n      </div>\n\n      <ul className=\"flight__leg-list\" >\n        {legs.map((leg, index) => <Leg data={leg} key={index} />)}\n      </ul>\n\n      <button className=\"flight__button button\" >ВЫБРАТЬ</button>\n    </article>\n  );\n}\n\nexport default Flight;\n","import React from 'react';\nimport './FilterPanel.scss';\nimport { useSelector } from \"react-redux\";\nimport { selectAirlines } from '../../app/flightsSlice';\n\nfunction FilterPanel({ filterAndSort }) {\n  const airlines = useSelector(selectAirlines);\n\n  function handleChange({ currentTarget, target }) {\n    let consolidatedValue;\n    const dataAttr = parseInt(target.dataset['changeNumber'], 10);\n    if (dataAttr !== 0 && !dataAttr) {\n      consolidatedValue = target.value\n    } else {\n      consolidatedValue = dataAttr\n    }\n    filterAndSort({\n      fieldSetName: currentTarget.name,\n      fieldSetId: currentTarget.id,\n      fieldId: target.id,\n      fieldType: target.type,\n      fieldChecked: target.checked,\n      fieldValue: consolidatedValue,\n    });\n  }\n\n  return (\n    <div className=\"filter\" >\n      <form className=\"filter__panel\" >\n        <fieldset className=\"filter__group\" name=\"sort\" onChange={handleChange} >\n          <legend className=\"filter__group-caption\" >Сортировать</legend>\n\n          <label htmlFor=\"price-ascending\" className=\"filter__label\" >\n            <input type=\"radio\" className=\"filter__field\" id=\"price-ascending\" name=\"sort-option\" />\n            &ndash; по возрастанию цены\n          </label>\n\n          <label htmlFor=\"price-descending\" className=\"filter__label\" >\n            <input type=\"radio\" className=\"filter__field\" id=\"price-descending\" name=\"sort-option\" />\n            &ndash; по убыванию цены\n          </label>\n\n          <label htmlFor=\"duration\" className=\"filter__label\" >\n            <input type=\"radio\" className=\"filter__field\" id=\"duration\" name=\"sort-option\" />\n            &ndash; по времени в пути\n          </label>\n        </fieldset>\n\n        <fieldset className=\"filter__group\" id=\"changes\" name=\"filter\" onChange={handleChange} >\n          <legend className=\"filter__group-caption\" >Фильтровать</legend>\n\n          <label htmlFor=\"changes1\" className=\"filter__label\" >\n            <input type=\"checkbox\" className=\"filter__field\" id=\"changes1\" name=\"filter-option\" data-change-number=\"1\" />\n            &ndash; 1 пересадка\n          </label>\n\n          <label htmlFor=\"changes0\" className=\"filter__label\" >\n            <input type=\"checkbox\" className=\"filter__field\" id=\"changes0\" name=\"filter-option\" data-change-number=\"0\" />\n            &ndash; без пересадок\n          </label>\n        </fieldset>\n\n        <fieldset className=\"filter__group\" id=\"price\" name=\"filter\" onChange={handleChange} >\n          <legend className=\"filter__group-caption\" >Цена</legend>\n\n          <label htmlFor=\"minimum\" className=\"filter__label filter__label_price\" >\n            От\n            <input type=\"number\" className=\"filter__field filter__field_price\" id=\"minimum\" name=\"filter-option\" />\n          </label>\n\n          <label htmlFor=\"maximum\" className=\"filter__label filter__label_price\" >\n            До\n            <input type=\"number\" className=\"filter__field filter__field_price\" id=\"maximum\" name=\"filter-option\" />\n          </label>\n        </fieldset>\n\n        <fieldset className=\"filter__group\" id=\"airlines\" name=\"filter\" onChange={handleChange} >\n          <legend className=\"filter__group-caption\" >Авиакомпании</legend>\n\n          {airlines && airlines.map((item) => (\n            <label htmlFor={item.uid} className=\"filter__label\" key={item.uid} >\n              <input type=\"checkbox\" className=\"filter__field\" id={item.uid} name=\"filter-option\" />\n              &ndash; {item.caption}\n            </label>\n          ))}\n        </fieldset>\n      </form>\n    </div>\n  );\n}\n\nexport default FilterPanel;\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Flight from './components/Flight/Flight';\nimport FilterPanel from './components/FilterPanel/FilterPanel';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFlights, selectFlights } from './app/flightsSlice';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const flights = useSelector(selectFlights);\n  const [sortedIndices, setSortedIndices] = useState([]);\n  const increment = 2;\n  const [numOfRendered, setNumOfRendered] = useState(increment);\n  const [renderedIndices, setRenderedIndices] = useState([]);\n  const [sortCriterion, setSortCriterion] = useState(null);\n  const [filterCriteria, setFilterCriteria] = useState({ changes: {}, price: {}, airlines: {} });\n\n  function renderMore() {\n    const newNumOfRendered = Math.min(numOfRendered + increment, sortedIndices.length); // если всего 11, то индексы 0-10; мин(2 + 2, 11) = 4, затем 6, 8, 10, 11...\n    setRenderedIndices(sortedIndices.slice(0, newNumOfRendered)) // ...и включ с 0 по 3, затем 0-5, 0-7, 0-9, 0-10\n    setNumOfRendered(newNumOfRendered)\n  }\n\n  function filterAndSort({ fieldSetName, fieldSetId, fieldId, fieldType, fieldChecked, fieldValue, sortedIndicesInput }) {\n    let newSortedIndices;\n    switch (fieldSetName) {\n      case \"sort\":\n        newSortedIndices = sortedIndicesInput ? [...sortedIndicesInput] : [...sortedIndices];\n        switch (fieldId) {\n          case \"price-ascending\":\n            setSortedIndices(newSortedIndices.sort((a, b) => flights[a].flight.price.total.amount - flights[b].flight.price.total.amount));\n            break;\n          case \"price-descending\":\n            setSortedIndices(newSortedIndices.sort((a, b) => flights[b].flight.price.total.amount - flights[a].flight.price.total.amount));\n            break;\n          case \"duration\":\n            setSortedIndices(newSortedIndices.sort((a, b) => flights[a].duration - flights[b].duration));\n            break;\n          default:\n            break;\n        }\n        setSortCriterion(fieldId)\n        break;\n\n      case \"filter\":\n        const newFilterCriteria = { ...filterCriteria };\n        newFilterCriteria[fieldSetId] = { ...filterCriteria[fieldSetId], [fieldId]: fieldValue };\n        /* Удалять поля, если */\n        /* неотмеченный чекбокс */\n        const a = fieldType === 'checkbox';\n        const b = !fieldChecked;\n        /* пустое поле (falsy) или [поля нет; но возможно ложное true: мы подставляем для одного из полей цифру, и это мб 0; поэтому проверяю по длине] */\n        const c = !fieldValue;\n        const d = fieldValue !== 0;\n        if ((a && b) || (c && d)) {\n          delete newFilterCriteria[fieldSetId][fieldId];\n        }\n\n        newSortedIndices = flights.reduce((result, item, index) => {\n          const itemPrice = parseInt(item.flight.price.total.amount, 10);\n          if (\n            (Object.keys(newFilterCriteria.changes).length === 0 || Object.values(newFilterCriteria.changes).includes(item.numOfChanges)) &&\n            (!newFilterCriteria.price.minimum || itemPrice >= parseInt(newFilterCriteria.price.minimum, 10)) &&\n            (!newFilterCriteria.price.maximum || itemPrice <= parseInt(newFilterCriteria.price.maximum, 10)) &&\n            (Object.keys(newFilterCriteria.airlines).length === 0 || Object.keys(newFilterCriteria.airlines).includes(item.flight.carrier.uid))\n          ) {\n            result.push(index);\n          }\n          return result;\n        }, []);\n        setSortedIndices(newSortedIndices)\n        sortCriterion && filterAndSort({ fieldSetName: 'sort', fieldId: sortCriterion, sortedIndicesInput: newSortedIndices })\n        setFilterCriteria(newFilterCriteria);\n        break;\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => dispatch(setFlights()), [dispatch]);\n  useEffect(() => setSortedIndices(flights.map((_, i) => i)), [flights, dispatch]);\n  useEffect(() => setRenderedIndices(sortedIndices.slice(0, numOfRendered)), [sortedIndices, dispatch]);\n\n  return (\n    <div className=\"app\">\n      <FilterPanel filterAndSort={filterAndSort} />\n\n      <section className=\"results\" >\n        <div className=\"results__view-area\" >\n          {renderedIndices.map((index, i) => <Flight data={flights[index]} key={i} />)}\n        </div>\n\n        <div className=\"results__button-background\" >\n          {numOfRendered < sortedIndices.length && <button className=\"results__button button\" onClick={renderMore} >Показать еще</button>}\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport store from './app/store';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}